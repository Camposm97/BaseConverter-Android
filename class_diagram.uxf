<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>190</x>
      <y>620</y>
      <w>270</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
Base
--
BASE_2
BASE_3
...
BASE_36
--
-radix: int
-formalName: String
--
+getRadix(): int
+getFormalName(): String
+toString(): String
+toTitle(): String
--
_+toItem(base: Base): String_
_+loadSpinnerItemMainBases(): List&lt;String&gt;_
_+loadSpinnerAllBases(): List&lt;String&gt;_
_+parse(chosenItem: String): Base_
_+isValidBaseNum(input: BaseNumber): boolean_
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>510</x>
      <y>660</y>
      <w>280</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
BaseNumber
--
-base: Base
-value: String
--
+getBase(): Base
+getValue(): String
+size(): int
+is(base: Base): boolean
+toSpanString(): SpannableString
--
_+getMain(): BaseNumber[]_
_+getAll(): BaseNumber[]_
_+deepCopy(number: BaseNumber): BaseNumber_

style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>510</x>
      <y>570</y>
      <w>190</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Note..
If a BaseNumber should check if it's invalid and throw an exception if it is
bg=blue
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>750</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>360</y>
      <w>410</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
BaseConverter
--
+convertTo(input: BaseNumber, convertTo: Base): BaseNumber
+convertToDec(input: BaseNumber): BaseNumber
+convertDecToBase(input: BaseNumber, convertTo: Base): BaseNumber
+getMainResults(input: BaseNumber): BaseNumber[]
+getAllResults(input: BaseNumber): BaseNumber[]
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>60</y>
      <w>120</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
FixedPointConverter
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>140</y>
      <w>100</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
BinaryOperator
style=autoresize</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
